"""Add move request MVP and user tiers tables

Revision ID: 053ee8ec49af
Revises: 43d891ba4b93
Create Date: 2025-09-11 14:36:54.526213

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '053ee8ec49af'
down_revision: Union[str, Sequence[str], None] = '43d891ba4b93'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('move_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('target_user_id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('viewed_at', sa.DateTime(), nullable=True),
    sa.Column('license_plate', sa.String(length=20), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('requester_info', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['target_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_move_requests_id'), 'move_requests', ['id'], unique=False)
    
    # Add performance indexes for move_requests
    op.create_index('ix_move_requests_license_plate', 'move_requests', ['license_plate'])
    op.create_index('ix_move_requests_is_read', 'move_requests', ['is_read'])
    op.create_index('ix_move_requests_target_user_unread', 'move_requests', ['target_user_id', 'is_read'])
    
    op.create_table('user_tiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tier', sa.String(length=20), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_tiers_id'), 'user_tiers', ['id'], unique=False)
    
    # Add performance indexes for user_tiers
    op.create_index('ix_user_tiers_user_id', 'user_tiers', ['user_id'])
    op.create_index('ix_user_tiers_tier', 'user_tiers', ['tier'])
    
    # Add unique constraint for one tier per user
    op.create_unique_constraint('uq_user_tiers_user_id', 'user_tiers', ['user_id'])
    # Skip cars index operations - foreign key constraint prevents dropping
    op.add_column('parking_sessions', sa.Column('public_message', sa.String(length=200), nullable=True))
    op.drop_index(op.f('idx_parking_sessions_car_id'), table_name='parking_sessions')
    op.drop_index(op.f('idx_parking_sessions_end_time'), table_name='parking_sessions')
    op.drop_index(op.f('idx_parking_sessions_start_time'), table_name='parking_sessions')
    op.drop_index(op.f('idx_parking_sessions_user_history'), table_name='parking_sessions')
    op.drop_index(op.f('idx_parking_sessions_user_id'), table_name='parking_sessions')
    op.create_index(op.f('ix_parking_sessions_car_id'), 'parking_sessions', ['car_id'], unique=False)
    op.create_index(op.f('ix_parking_sessions_end_time'), 'parking_sessions', ['end_time'], unique=False)
    op.create_index(op.f('ix_parking_sessions_id'), 'parking_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_parking_sessions_start_time'), 'parking_sessions', ['start_time'], unique=False)
    op.create_index(op.f('ix_parking_sessions_user_id'), 'parking_sessions', ['user_id'], unique=False)
    op.drop_index(op.f('idx_users_signup_country_iso'), table_name='users')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_signup_country_iso'), 'users', ['signup_country_iso'], unique=False)
    
    # Create default user tiers for existing users
    from sqlalchemy import text
    connection = op.get_bind()
    connection.execute(
        text("""
        INSERT INTO user_tiers (user_id, tier, created_at)
        SELECT id, 'free', UTC_TIMESTAMP() 
        FROM users 
        WHERE id NOT IN (SELECT user_id FROM user_tiers)
        """)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_signup_country_iso'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_index(op.f('idx_users_signup_country_iso'), 'users', ['signup_country_iso'], unique=False)
    op.drop_index(op.f('ix_parking_sessions_user_id'), table_name='parking_sessions')
    op.drop_index(op.f('ix_parking_sessions_start_time'), table_name='parking_sessions')
    op.drop_index(op.f('ix_parking_sessions_id'), table_name='parking_sessions')
    op.drop_index(op.f('ix_parking_sessions_end_time'), table_name='parking_sessions')
    op.drop_index(op.f('ix_parking_sessions_car_id'), table_name='parking_sessions')
    op.create_index(op.f('idx_parking_sessions_user_id'), 'parking_sessions', ['user_id'], unique=False)
    op.create_index(op.f('idx_parking_sessions_user_history'), 'parking_sessions', ['user_id', 'start_time'], unique=False)
    op.create_index(op.f('idx_parking_sessions_start_time'), 'parking_sessions', ['start_time'], unique=False)
    op.create_index(op.f('idx_parking_sessions_end_time'), 'parking_sessions', ['end_time'], unique=False)
    op.create_index(op.f('idx_parking_sessions_car_id'), 'parking_sessions', ['car_id'], unique=False)
    op.drop_column('parking_sessions', 'public_message')
    # Skip cars index operations - foreign key constraint prevents dropping
    # Drop user_tiers indexes and constraints
    op.drop_constraint('uq_user_tiers_user_id', 'user_tiers', type_='unique')
    op.drop_index('ix_user_tiers_tier', 'user_tiers')
    op.drop_index('ix_user_tiers_user_id', 'user_tiers')
    op.drop_index(op.f('ix_user_tiers_id'), table_name='user_tiers')
    op.drop_table('user_tiers')
    
    # Drop move_requests indexes
    op.drop_index('ix_move_requests_target_user_unread', 'move_requests')
    op.drop_index('ix_move_requests_is_read', 'move_requests')
    op.drop_index('ix_move_requests_license_plate', 'move_requests')
    op.drop_index(op.f('ix_move_requests_id'), table_name='move_requests')
    op.drop_table('move_requests')
    # ### end Alembic commands ###
